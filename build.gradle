buildscript {
    repositories {
        jcenter()
        //Add only for SNAPSHOT versions
        //maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.11.0"
    }
}

plugins {
    id 'java'
    id 'maven'
    id 'checkstyle'
    id 'net.saliman.cobertura' version '2.5.2'
    id 'com.github.kt3k.coveralls' version '2.8.2'
    id 'osgi'
    id 'net.ltgt.errorprone' version '0.0.13'   
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

group = GROUP
version = VERSION_NAME

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

configurations.all {
}

repositories {
     jcenter()
}

dependencies {
    compile group: 'com.google.code.gson', name: 'gson', version:'2.8.2'
    testCompile group: 'com.google.guava', name: 'guava', version:'18.0'
    testCompile group: 'junit', name: 'junit', version:'4.12'
    testCompile group: 'org.mockito', name: 'mockito-core', version:'2.12.0'
    testRuntime group: 'org.slf4j', name: 'slf4j-api', version: '1.7.10'
    errorprone 'com.google.errorprone:error_prone_core:2.2.0'
}

jar {
    manifest {
        attributes("Implementation-Title": POM_NAME,
                   "Implementation-Version": VERSION_NAME,
                   "Implementation-Vendor": VENDOR_NAME)

        version = VERSION_NAME
        symbolicName = POM_ARTIFACT_ID

        instruction 'Export-Package', '*'
    }
}

apply from: 'deploy.gradle'

test {
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

checkstyle {
    toolVersion = '8.8'
}

cobertura {
    coverageFormats = ['html', 'xml'] // coveralls plugin depends on xml format report
    coverageIgnoreTrivial = true // ignore getters/setters in coverage report
}
