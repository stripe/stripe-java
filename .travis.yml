sudo: required

language: java

before_install:
  # Unpack and start stripe-mock so that the test suite can talk to it
  - |
    if [ ! -d "stripe-mock/stripe-mock_${STRIPE_MOCK_VERSION}" ]; then
      mkdir -p stripe-mock/stripe-mock_${STRIPE_MOCK_VERSION}/
      curl -L "https://github.com/stripe/stripe-mock/releases/download/v${STRIPE_MOCK_VERSION}/stripe-mock_${STRIPE_MOCK_VERSION}_linux_amd64.tar.gz" -o "stripe-mock/stripe-mock_${STRIPE_MOCK_VERSION}_linux_amd64.tar.gz"
      tar -zxf "stripe-mock/stripe-mock_${STRIPE_MOCK_VERSION}_linux_amd64.tar.gz" -C "stripe-mock/stripe-mock_${STRIPE_MOCK_VERSION}/"
    fi
  - |
    stripe-mock/stripe-mock_${STRIPE_MOCK_VERSION}/stripe-mock -strict-version-check > /dev/null &
    STRIPE_MOCK_PID=$!
  - export PATH="${PATH}:${PWD}/stripe-mock/stripe-mock_${STRIPE_MOCK_VERSION}"

env:
  global:
  - STRIPE_MOCK_VERSION=0.52.0

matrix:
  include:
    - jdk: oraclejdk8
    - jdk: openjdk8
    - jdk: oraclejdk9
    - jdk: openjdk9
    - jdk: openjdk10
    - jdk: openjdk11
    - jdk: openjdk-ea
  allow_failures:
    - jdk: openjdk-ea

notifications:
  email:
    on_success: never

script:
  - ./gradlew --version
  - ./gradlew clean
  - if [ "$TRAVIS_JDK_VERSION" == "oraclejdk9" ]; then ./gradlew check; fi
  - ./gradlew -Djdk.tls.client.protocols="TLSv1.2" cobertura coveralls

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
